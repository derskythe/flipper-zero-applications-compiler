name: "FAP: Build for multiple SDK sources"
run-name: "Build for multiple SDK sources ${{ inputs.release_version }}"

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "{owner}/{repo}"
        required: true

permissions:
  packages: write
  contents: read

env:
  FILENAME: build-fap.yaml
  SDK_ZIP_FILENAME: ''
  ARTIFACT_NAME: ''
  GH_TOKEN: ${{ github.token }}

jobs:
  ufbt-build-action:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Official dev channel
            suffix: "-ofw"
            sdk-channel: dev
          - name: Unleashed firmware
            suffix: "-unlshd"
            sdk-index-url: "DarkFlippers/unleashed-firmware"
            sdk-hw-target: "f7"
    name: 'UFBT: Build for ${{ matrix.name }}'
    steps:
      - name: Print info
        run: |
          echo "echo ::notice file=${{ env.FILENAME }},title=Build::Build FAP ${{ inputs.release_version }}"

      - name: Replace slash with dash
        run: | 
          CLEAN_NAME=$(echo "${{ inputs.release_version }}" | sed 's/\//-/g' | tr '[:upper:]' '[:lower:]')
          echo "ARTIFACT_NAME=${CLEAN_NAME}${{ matrix.suffix }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.release_version }}
          clean: true
          submodules: true

      - name: Download SDK
        if: ${{ matrix.sdk-index-url }}
        run: |
          echo "Using SDK index URL: ${{ matrix.sdk-index-url }}"
          gh release download --repo "DarkFlippers/unleashed-firmware" \
            --pattern "flipper-z-f7-sdk-unlshd-*.zip" --clobber
          # unzip flipper-z-f7-sdk-unlshd-*.zip
          mv flipper-z-f7-sdk-unlshd-* sdk.zip
          CURRENT_DIR=$(pwd)
          SDK_ZIP_FILENAME="${CURRENT_DIR}"/sdk.zip
          echo "SDK_ZIP_FILENAME=${SDK_ZIP_FILENAME}" >> $GITHUB_ENV

      - name: Build with ufbt
        uses: flipperdevices/flipperzero-ufbt-action@v0.1
        id: build-app
        env:
          SDK_ZIP_FILENAME: ${{ env.SDK_ZIP_FILENAME }}
        with:
          sdk-channel: ${{ matrix.sdk-channel }}
          sdk-file: ${{ env.SDK_ZIP_FILENAME }}
          sdk-hw-target: ${{ matrix.sdk-hw-target }}

      - name: Upload app artifacts
        uses: actions/upload-artifact@v4
        id: artifact-upload-step
        with:
          name: ${{ env.ARTIFACT_NAME }}-${{ github.run_number }}.zip
          path: ${{ steps.build-app.outputs.fap-artifacts }}
          overwrite: true
          if-no-files-found: error
          retention-days: 1

      - name: Extract ID and URL
        run: |
          echo "echo ::notice file=${{ env.FILENAME }},title=Artifact ID::${{ steps.artifact-upload-step.outputs.artifact-id }}"
          echo "echo ::notice file=${{ env.FILENAME }},title=Artifact URL::${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/${{ steps.artifact-upload-step.outputs.artifact-id }}"
